name: {{EDGEIQ_SNAP_NAME}}
base: core20
version: '{{EDGEIQ_CODA_SNAP_VERSION}}'

grade: stable
confinement: strict

summary: EdgeIQ Agent for Device Management and Workflow Orchestration
description: |
  Note: To use EdgeIQ Coda, an EdgeIQ Symphony subscription is required.
  
  EdgeIQ Coda facilitates the efficient management of IoT devices, ensuring seamless data flow and secure communication with the EdgeIQ Symphony platform. 
  It offers robust features for device monitoring, data collection, and real-time analytics, making it an essential tool for edge computing solutions.
  
  EdgeIQ Coda is a powerful service designed to connect, manage, and orchestrate IoT devices at the edge. 
  It supports a wide range of industrial protocols (Modbus, BacNET, OPC-UA) and application protocols (Serial, D-Bus, SNMP, HTTP, TCP/UDP, etc.),
  and can be integrated with numerous cloud services (AWS IoT Core, Azure IoT Hub, GCP, Inmarsat, Orbcomm, Twilio, etc.),
  providing flexible workflows for IoT device orchestration.
  
  This snap package simplifies the deployment of Coda on Ubuntu Core, enabling users to leverage its capabilities with minimal setup effort.
  Whether deploying a small number of devices or managing a large-scale IoT network, Coda offers the tools and functionality needed to ensure smooth and reliable operations.
  
  For more information, visit our website: "https://www.edgeiq.ai/".

icon: assets/gui/icon.svg
website: https://www.edgeiq.ai/
contact: contact@edgeiq.ai
source-code: https://github.com/EdgeIQ/coda-snap.git
issues: https://edgeiq.atlassian.net/servicedesk/customer/portal/3
license: Proprietary

architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf 

hooks:
  install:
    plugs: [network]
  configure:
    plugs: []

apps:
  agent:
    command: edge
    daemon: simple
    restart-condition: always
    plugs:
      - home
      - shutdown
      - snapd-control
      - hardware-observe
      - system-backup
      - network
      - network-bind
      - network-control
      - network-manager
      - network-manager-observe
      - network-observe
      - network-setup-control
      - network-setup-observe
      - network-status
      - modem-manager
      - ppp
      - firewall-control
      - tpm

parts:
  deps:
    plugin: nil
    stage-packages:
      - network-manager
      - modemmanager
      - iptables
      - iputils-ping

  utils:
    plugin: dump
    source: utils

  coda:
    plugin: nil
    build-packages:
      - wget
      - jq
    override-build: |
      EDGEIQ_API_URL={{EDGEIQ_API_URL}}
      VERSION={{EDGEIQ_CODA_VERSION}}
      case $SNAPCRAFT_ARCH_TRIPLET in
        "x86_64-linux-gnu")
          ARCH=amd64
          ;;
        "arm-linux-gnueabihf")
          ARCH=arm7
          ;;
        "aarch64-linux-gnu")
          ARCH=arm64
          ;;
      esac
      
      wget --max-redirect=10 $EDGEIQ_API_URL/api/v1/platform/releases/$VERSION/edge-assets-$VERSION.tar.gz -O $SNAPCRAFT_PART_INSTALL/edge-assets.tar.gz
      tar -xvf $SNAPCRAFT_PART_INSTALL/edge-assets.tar.gz -C $SNAPCRAFT_PART_INSTALL
      rm $SNAPCRAFT_PART_INSTALL/edge-assets.tar.gz
      mv $SNAPCRAFT_PART_INSTALL/edge/* $SNAPCRAFT_PART_INSTALL/
      rm -rf $SNAPCRAFT_PART_INSTALL/edge

      jq '.network_configurer = "nmcli"' $SNAPCRAFT_PART_INSTALL/conf/bootstrap.json > $SNAPCRAFT_PART_INSTALL/conf/temp.json 
      mv $SNAPCRAFT_PART_INSTALL/conf/temp.json $SNAPCRAFT_PART_INSTALL/conf/bootstrap.json

      wget --max-redirect=10 $EDGEIQ_API_URL/api/v1/platform/releases/$VERSION/edge-linux-$ARCH-$VERSION -O $SNAPCRAFT_PART_INSTALL/edge
      chmod +x $SNAPCRAFT_PART_INSTALL/edge
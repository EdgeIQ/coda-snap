services:
  # Ubuntu Core 24 container with snapd and systemd
  ubuntu-core:
    build:
      context: ./ubuntu-core
      dockerfile: Dockerfile
    container_name: ubuntu-core
    hostname: ubuntu-core
    privileged: true
    networks:
      - coda-test-network
    stop_signal: SIGRTMIN+3
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - ubuntu-core-data:/var/lib/snapd
    tmpfs:
      - /run
      - /run/lock
      - /tmp
    healthcheck:
      test: ["CMD-SHELL", "snap version > /dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 60s

  # MQTT broker (Mosquitto)
  mqtt-broker:
    image: eclipse-mosquitto:2.0
    container_name: mqtt-broker
    hostname: mqtt-broker
    networks:
      - coda-test-network
    ports:
      - "11883:1883"
    volumes:
      - ./fixtures/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
    healthcheck:
      test: ["CMD", "mosquitto_sub", "-t", "$$SYS/#", "-C", "1", "-i", "healthcheck", "-W", "3"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Mock EdgeIQ API server
  mock-server:
    build:
      context: ./mock-server
      dockerfile: Dockerfile
    container_name: mock-server
    hostname: mock-server
    networks:
      - coda-test-network
    ports:
      - "18080:8080"
    volumes:
      - ./fixtures/responses:/app/responses:ro
    depends_on:
      mqtt-broker:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080/health')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Test runner container (run with: docker compose run --rm test-runner)
  test-runner:
    build:
      context: ./test-runner
      dockerfile: Dockerfile
    container_name: test-runner
    hostname: test-runner
    networks:
      - coda-test-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./test-runner/tests:/tests:ro
    environment:
      - UBUNTU_CORE_CONTAINER=ubuntu-core
      - MOCK_SERVER_URL=http://mock-server:8080
      - MOCK_MQTT_HOST=mqtt-broker
      - MOCK_MQTT_PORT=1883
      - PYTHONUNBUFFERED=1
    depends_on:
      ubuntu-core:
        condition: service_healthy
      mock-server:
        condition: service_healthy
      mqtt-broker:
        condition: service_healthy
    profiles:
      - test

networks:
  coda-test-network:
    driver: bridge

volumes:
  ubuntu-core-data:
    driver: local
